# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 05/27/2016

require 'date'
module MarvelComics
  class Character

    # The unique ID of the character resource.
    # @return [Integer]
    attr_accessor :id

    # The name of the character.
    # @return [String]
    attr_accessor :name

    # A short bio or description of the character.
    # @return [String]
    attr_accessor :description

    # The date the resource was most recently modified.
    # @return [DateTime]
    attr_accessor :modified

    # The canonical URL identifier for this resource.
    # @return [String]
    attr_accessor :resource_uri

    # A set of public web site URLs for the resource.
    # @return [List of UrlModel]
    attr_accessor :urls

    # The representative image for this character.
    # @return [Thumbnail]
    attr_accessor :thumbnail

    # A resource list containing comics which feature this character.
    # @return [ComicList]
    attr_accessor :comics

    # A resource list of stories in which this character appears.
    # @return [StoryList]
    attr_accessor :stories

    # A resource list of events in which this character appears.
    # @return [EventList]
    attr_accessor :events

    # A resource list of series in which this character appears.
    # @return [SeriesList]
    attr_accessor :series

    def initialize(id = nil,
                   name = nil,
                   description = nil,
                   modified = nil,
                   resource_uri = nil,
                   urls = nil,
                   thumbnail = nil,
                   comics = nil,
                   stories = nil,
                   events = nil,
                   series = nil)
      @id = id
      @name = name
      @description = description
      @modified = modified
      @resource_uri = resource_uri
      @urls = urls
      @thumbnail = thumbnail
      @comics = comics
      @stories = stories
      @events = events
      @series = series

    end

    def method_missing(method_name)
      puts "There is no method called '#{method_name}'."
    end

    # Creates JSON of the curent object
    def to_json(options = {})
      hash = key_map
      hash.to_json(options)
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        id = hash["id"]
        name = hash["name"]
        description = hash["description"]
        modified = DateTime.iso8601(hash["modified"])
        resource_uri = hash["resourceURI"]
        # Parameter is an array, so we need to iterate through it
        urls = nil
        if hash["urls"] != nil
          urls = Array.new
          hash["urls"].each{|structure| urls << UrlModel.from_hash(structure)}
        end
        thumbnail = Thumbnail.from_hash(hash["thumbnail"])
        comics = ComicList.from_hash(hash["comics"])
        stories = StoryList.from_hash(hash["stories"])
        events = EventList.from_hash(hash["events"])
        series = SeriesList.from_hash(hash["series"])
        # Create object from extracted values
        Character.new(id,
                      name,
                      description,
                      modified,
                      resource_uri,
                      urls,
                      thumbnail,
                      comics,
                      stories,
                      events,
                      series)
      end
    end

    # Defines the key map for json serialization
    def key_map
      hash = {}
      hash['id'] = id
      hash['name'] = name
      hash['description'] = description
      hash['modified'] = modified
      hash['resourceURI'] = resource_uri
      hash['urls'] = urls.map(&:key_map)
      hash['thumbnail'] = thumbnail.key_map
      hash['comics'] = comics.key_map
      hash['stories'] = stories.key_map
      hash['events'] = events.key_map
      hash['series'] = series.key_map
      hash
    end
  end
end
