# This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 05/27/2016

require 'date'
module MarvelComics
  class Series

    # The unique ID of the series resource.
    # @return [Integer]
    attr_accessor :id

    # The canonical title of the series.
    # @return [String]
    attr_accessor :title

    # A description of the series.
    # @return [String]
    attr_accessor :description

    # The canonical URL identifier for this resource.
    # @return [String]
    attr_accessor :resource_uri

    # A set of public web site URLs for the resource.
    # @return [List of UrlModel]
    attr_accessor :urls

    # The first year of publication for the series.
    # @return [Integer]
    attr_accessor :start_year

    # The last year of publication for the series (conventionally, 2099 for ongoing series) .
    # @return [Integer]
    attr_accessor :end_year

    # The age-appropriateness rating for the series.
    # @return [String]
    attr_accessor :rating

    # The date the resource was most recently modified.
    # @return [DateTime]
    attr_accessor :modified

    # The representative image for this series.
    # @return [Thumbnail]
    attr_accessor :thumbnail

    # A resource list containing comics in this series.
    # @return [ComicList]
    attr_accessor :comics

    # A resource list containing stories which occur in comics in this series.
    # @return [StoryList]
    attr_accessor :stories

    # A resource list containing events which take place in comics in this series.
    # @return [EventList]
    attr_accessor :events

    # A resource list containing characters which appear in comics in this series.
    # @return [CharacterList]
    attr_accessor :characters

    # A resource list of creators whose work appears in comics in this series.
    # @return [CreatorList]
    attr_accessor :creators

    # A summary representation of the series which follows this series.
    # @return [SeriesSummary]
    attr_accessor :next

    # A summary representation of the series which preceded this series.
    # @return [SeriesSummary]
    attr_accessor :previous

    def initialize(id = nil,
                   title = nil,
                   description = nil,
                   resource_uri = nil,
                   urls = nil,
                   start_year = nil,
                   end_year = nil,
                   rating = nil,
                   modified = nil,
                   thumbnail = nil,
                   comics = nil,
                   stories = nil,
                   events = nil,
                   characters = nil,
                   creators = nil,
                   next = nil,
                   previous = nil)
      @id = id
      @title = title
      @description = description
      @resource_uri = resource_uri
      @urls = urls
      @start_year = start_year
      @end_year = end_year
      @rating = rating
      @modified = modified
      @thumbnail = thumbnail
      @comics = comics
      @stories = stories
      @events = events
      @characters = characters
      @creators = creators
      @next = next
      @previous = previous

    end

    def method_missing(method_name)
      puts "There is no method called '#{method_name}'."
    end

    # Creates JSON of the curent object
    def to_json(options = {})
      hash = key_map
      hash.to_json(options)
    end

    # Creates an instance of the object from a hash
    def self.from_hash(hash)
      if hash == nil
        nil
      else
        # Extract variables from the hash
        id = hash["id"]
        title = hash["title"]
        description = hash["description"]
        resource_uri = hash["resourceURI"]
        # Parameter is an array, so we need to iterate through it
        urls = nil
        if hash["urls"] != nil
          urls = Array.new
          hash["urls"].each{|structure| urls << UrlModel.from_hash(structure)}
        end
        start_year = hash["startYear"]
        end_year = hash["endYear"]
        rating = hash["rating"]
        modified = DateTime.iso8601(hash["modified"])
        thumbnail = Thumbnail.from_hash(hash["thumbnail"])
        comics = ComicList.from_hash(hash["comics"])
        stories = StoryList.from_hash(hash["stories"])
        events = EventList.from_hash(hash["events"])
        characters = CharacterList.from_hash(hash["characters"])
        creators = CreatorList.from_hash(hash["creators"])
        next = SeriesSummary.from_hash(hash["next"])
        previous = SeriesSummary.from_hash(hash["previous"])
        # Create object from extracted values
        Series.new(id,
                   title,
                   description,
                   resource_uri,
                   urls,
                   start_year,
                   end_year,
                   rating,
                   modified,
                   thumbnail,
                   comics,
                   stories,
                   events,
                   characters,
                   creators,
                   next,
                   previous)
      end
    end

    # Defines the key map for json serialization
    def key_map
      hash = {}
      hash['id'] = id
      hash['title'] = title
      hash['description'] = description
      hash['resourceURI'] = resource_uri
      hash['urls'] = urls.map(&:key_map)
      hash['startYear'] = start_year
      hash['endYear'] = end_year
      hash['rating'] = rating
      hash['modified'] = modified
      hash['thumbnail'] = thumbnail.key_map
      hash['comics'] = comics.key_map
      hash['stories'] = stories.key_map
      hash['events'] = events.key_map
      hash['characters'] = characters.key_map
      hash['creators'] = creators.key_map
      hash['next'] = next.key_map
      hash['previous'] = previous.key_map
      hash
    end
  end
end
